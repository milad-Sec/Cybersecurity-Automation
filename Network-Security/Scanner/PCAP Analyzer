#!/usr/bin/env python3
"""
Wireshark Automation Script - PCAP Analyzer
Author: Milad
Description:
    This script uses tshark (Wireshark CLI) to extract key insights
    from a PCAP file and generate a simple text report. (like IPs, protocols, top talkers, suspicious ports)
    
Requirements:
    - Wireshark/tshark installed
    - Python 3.x
"""

import subprocess
import sys
from collections import Counter

def run_tshark(cmd):
    """Run tshark command and return output lines"""
    result = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
    if result.returncode != 0:
        print("Error:", result.stderr)
        sys.exit(1)
    return result.stdout.splitlines()

def analyze_pcap(pcap_file):
    print(f"\n[+] Analyzing {pcap_file} ...")

    # Extract IP conversations
    print("\n[*] Top 10 Conversations:")
    conv_cmd = ["tshark", "-r", pcap_file, "-q", "-z", "conv,ip"]
    conv_output = run_tshark(conv_cmd)
    for line in conv_output[-12:]:  # Last 10 lines contain top conversations
        print(line)

    # Extract protocols
    print("\n[*] Protocol Hierarchy:")
    proto_cmd = ["tshark", "-r", pcap_file, "-q", "-z", "io,phs"]
    proto_output = run_tshark(proto_cmd)
    for line in proto_output:
        if "%" in line or "Protocol Hierarchy Statistics" in line:
            print(line)

    # Extract top source IPs
    print("\n[*] Top Source IPs:")
    ip_cmd = ["tshark", "-r", pcap_file, "-Tfields", "-e", "ip.src"]
    ip_output = run_tshark(ip_cmd)
    counter = Counter(ip_output)
    for ip, count in counter.most_common(10):
        print(f"{ip}: {count} packets")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("Usage: python3 pcap_analyzer.py <file.pcap>")
        sys.exit(1)
    analyze_pcap(sys.argv[1])
